apply plugin: 'com.android.library'
apply plugin: 'com.google.gms.google-services'

android {

    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {

        minSdkVersion 16
        targetSdkVersion 30

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        useLibrary 'org.apache.http.legacy'
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        staging {

            initWith release
            debuggable true
        }
    }

    // Specifies flavor dimension.
    flavorDimensions "relevence"
    productFlavors {

        // When building a variant that uses this flavor, the following configurations override those in the defaultConfig block.

        development {

            dimension "relevence"

            // To avoid using legacy multidex when building from the command line, set minSdkVersion to 21 or higher. When using Android Studio 2.3 or higher, the build automatically avoids legacy multidex when deploying to a device running API level 21 or higherâ€”regardless of what you set as your minSdkVersion.
//            minSdkVersion 21

            // The following configuration limits the usage of mdpi screen-density resources.
            resConfigs "mdpi"
        }

        production {

            dimension "relevence"
            // If you've configured the defaultConfig block for the release version of your app, you can leave this block empty and Gradle uses configurations in the defaultConfig block instead. You still need to create this flavor. Otherwise, all variants use the "development" flavor configurations.
        }
    }

    variantFilter { variant ->

        def names = variant.flavors*.name

        // To check for a certain build type, use variant.buildType.name == "<buildType>"
        if (names.contains("development") && names.contains("release")) {

            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }

        if (names.contains("production") && names.contains("debug")) {

            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }

        if (names.contains("development") && names.contains("staging")) {

            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'javax.inject:javax.inject:1'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.itextpdf:itext-pdfa:5.5.6-1'

    implementation platform('com.google.firebase:firebase-bom:28.0.0')
    // Declare the dependency for the Cloud Firestore library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-messaging'

    implementation 'com.github.kimkevin:cachepot:1.2.0'
    implementation 'com.chootdev:csnackbar:1.4.2'
    implementation 'de.codecrafters.tableview:tableview:2.8.1'
//    implementation 'io.michaelrocks:libphonenumber-android:8.12.1'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.28'
    implementation 'org.javatuples:javatuples:1.2'

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.media:media:1.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation project(path: ':Utils14:common14')
    implementation project(path: ':Utils11:common11')
    implementation project(path: ':Utils1:common1')
}
